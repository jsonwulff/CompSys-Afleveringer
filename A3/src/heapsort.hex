00000000 :                       #  read_long:
00000000 :                       #  .LFB0:
00000000 : 517008000000          #      subq $8, %rsp
00000006 : 39B7                  #      movq %r11, (%rsp)
00000008 : A4B000000010          #      leaq 268435456, %r11
0000000e : 310B                  #      movq (%r11), %rax
00000010 : 31B7                  #      movq (%rsp), %r11
00000012 : 507008000000          #      addq $8, %rsp
00000018 : 000B                  #      ret %r11
0000001a :                       #  gen_random:
0000001a :                       #  .LFB1:
0000001a : 517008000000          #      subq $8, %rsp
00000020 : 39B7                  #      movq %r11, (%rsp)
00000022 : A4B001000010          #      leaq 268435457, %r11
00000028 : 310B                  #      movq (%r11), %rax
0000002a : 31B7                  #      movq (%rsp), %r11
0000002c : 507008000000          #      addq $8, %rsp
00000032 : 000B                  #      ret %r11
00000034 :                       #  write_long:
00000034 :                       #  .LFB2:
00000034 : 517008000000          #      subq $8, %rsp
0000003a : 39B7                  #      movq %r11, (%rsp)
0000003c : A4B002000010          #      leaq 268435458, %r11
00000042 : 396B                  #      movq %rdi, (%r11)
00000044 : 31B7                  #      movq (%rsp), %r11
00000046 : 507008000000          #      addq $8, %rsp
0000004c : 000B                  #      ret %r11
0000004e :                       #  get_argc:
0000004e :                       #  .LFB3:
0000004e : 517008000000          #      subq $8, %rsp
00000054 : 39B7                  #      movq %r11, (%rsp)
00000056 : A4B000000020          #      leaq 536870912, %r11
0000005c : 310B                  #      movq (%r11), %rax
0000005e : 31B7                  #      movq (%rsp), %r11
00000060 : 507008000000          #      addq $8, %rsp
00000066 : 000B                  #      ret %r11
00000068 :                       #  get_argv:
00000068 :                       #  .LFB4:
00000068 : 517008000000          #      subq $8, %rsp
0000006e : 39B7                  #      movq %r11, (%rsp)
00000070 : 640008000020          #      movq $536870920, %eax
00000076 : 31B7                  #      movq (%rsp), %r11
00000078 : 507008000000          #      addq $8, %rsp
0000007e : 000B                  #      ret %r11
00000080 :                       #  print_array:
00000080 :                       #  .LFB7:
00000080 : 517020000000          #      subq $32, %rsp
00000086 : 7DB718000000          #      movq %r11, 24(%rsp)
0000008c : 7DC710000000          #      movq %r12, 16(%rsp)
00000092 : 7D4708000000          #      movq %rbp, 8(%rsp)
00000098 : 3917                  #      movq %rbx, (%rsp)
0000009a : 2146                  #      movq %rdi, %rbp
0000009c : 21C5                  #      movq %rsi, %r12
0000009e : 641000000000          #      movq $0, %ebx
000000a4 : 4F00bb000000          #      jmp .L7
000000aa :                       #  .L8:
000000aa : 93BC13                #      leaq (%r12, %rbx, 8), %r11
000000ad : 316B                  #      movq (%r11), %rdi
000000af : 4EB034000000          #      call write_long, %r11
000000b5 : 501001000000          #      addq $1, %rbx
000000bb :                       #  .L7:
000000bb : 4614aa000000          #      cbg %rbp, %rbx, .L8
000000c1 : 3117                  #      movq (%rsp), %rbx
000000c3 : 754708000000          #      movq 8(%rsp), %rbp
000000c9 : 75C710000000          #      movq 16(%rsp), %r12
000000cf : 75B718000000          #      movq 24(%rsp), %r11
000000d5 : 507020000000          #      addq $32, %rsp
000000db : 000B                  #      ret %r11
000000dd :                       #  init_allocator:
000000dd :                       #  .LFB8:
000000dd : 517008000000          #      subq $8, %rsp
000000e3 : 39B7                  #      movq %r11, (%rsp)
000000e5 : A4B050040000          #      leaq cur_allocator, %r11
000000eb : 64A000000030          #      movq $805306368, %r10
000000f1 : 39AB                  #      movq %r10, (%r11)
000000f3 : 31B7                  #      movq (%rsp), %r11
000000f5 : 507008000000          #      addq $8, %rsp
000000fb : 000B                  #      ret %r11
000000fd :                       #  allocate:
000000fd :                       #  .LFB9:
000000fd : 517008000000          #      subq $8, %rsp
00000103 : 39B7                  #      movq %r11, (%rsp)
00000105 : A4B050040000          #      leaq cur_allocator, %r11
0000010b : 310B                  #      movq (%r11), %rax
0000010d : 933063                #      leaq (%rax, %rdi, 8), %rdx
00000110 : A4B050040000          #      leaq cur_allocator, %r11
00000116 : 393B                  #      movq %rdx, (%r11)
00000118 : 31B7                  #      movq (%rsp), %r11
0000011a : 507008000000          #      addq $8, %rsp
00000120 : 000B                  #      ret %r11
00000122 :                       #  get_random_array:
00000122 :                       #  .LFB5:
00000122 : 517028000000          #      subq $40, %rsp
00000128 : 7DB720000000          #      movq %r11, 32(%rsp)
0000012e : 7DD718000000          #      movq %r13, 24(%rsp)
00000134 : 7DC710000000          #      movq %r12, 16(%rsp)
0000013a : 7D4708000000          #      movq %rbp, 8(%rsp)
00000140 : 3917                  #      movq %rbx, (%rsp)
00000142 : 21C6                  #      movq %rdi, %r12
00000144 : 4EB0fd000000          #      call allocate, %r11
0000014a : 21D0                  #      movq %rax, %r13
0000014c : 641000000000          #      movq $0, %ebx
00000152 : 4F0077010000          #      jmp .L13
00000158 :                       #  .L14:
00000158 : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
0000015f : 640000000000          #      movq $0, %eax
00000165 : 4EB01a000000          #      call gen_random, %r11
0000016b : 7D0400000000          #      movq %rax, 0(%rbp)
00000171 : 501001000000          #      addq $1, %rbx
00000177 :                       #  .L13:
00000177 : 461C58010000          #      cbg %r12, %rbx, .L14
0000017d : 210D                  #      movq %r13, %rax
0000017f : 3117                  #      movq (%rsp), %rbx
00000181 : 754708000000          #      movq 8(%rsp), %rbp
00000187 : 75C710000000          #      movq 16(%rsp), %r12
0000018d : 75D718000000          #      movq 24(%rsp), %r13
00000193 : 75B720000000          #      movq 32(%rsp), %r11
00000199 : 507028000000          #      addq $40, %rsp
0000019f : 000B                  #      ret %r11
000001a1 :                       #  read_array:
000001a1 :                       #  .LFB6:
000001a1 : 517028000000          #      subq $40, %rsp
000001a7 : 7DB720000000          #      movq %r11, 32(%rsp)
000001ad : 7DD718000000          #      movq %r13, 24(%rsp)
000001b3 : 7DC710000000          #      movq %r12, 16(%rsp)
000001b9 : 7D4708000000          #      movq %rbp, 8(%rsp)
000001bf : 3917                  #      movq %rbx, (%rsp)
000001c1 : 21C6                  #      movq %rdi, %r12
000001c3 : 4EB0fd000000          #      call allocate, %r11
000001c9 : 21D0                  #      movq %rax, %r13
000001cb : 641000000000          #      movq $0, %ebx
000001d1 : 4F00f6010000          #      jmp .L17
000001d7 :                       #  .L18:
000001d7 : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
000001de : 640000000000          #      movq $0, %eax
000001e4 : 4EB000000000          #      call read_long, %r11
000001ea : 7D0400000000          #      movq %rax, 0(%rbp)
000001f0 : 501001000000          #      addq $1, %rbx
000001f6 :                       #  .L17:
000001f6 : 461Cd7010000          #      cbg %r12, %rbx, .L18
000001fc : 210D                  #      movq %r13, %rax
000001fe : 3117                  #      movq (%rsp), %rbx
00000200 : 754708000000          #      movq 8(%rsp), %rbp
00000206 : 75C710000000          #      movq 16(%rsp), %r12
0000020c : 75D718000000          #      movq 24(%rsp), %r13
00000212 : 75B720000000          #      movq 32(%rsp), %r11
00000218 : 507028000000          #      addq $40, %rsp
0000021e : 000B                  #      ret %r11
00000220 :                       #  sift_down:
00000220 :                       #  .LFB10:
00000220 : 517018000000          #      subq $24, %rsp
00000226 : 7DB710000000          #      movq %r11, 16(%rsp)
0000022c : 7DE708000000          #      movq %r14, 8(%rsp)
00000232 : 39F7                  #      movq %r15, (%rsp)
00000234 : 4F004b020000          #      jmp .L21
0000023a :                       #  .L23:
0000023a : 406096020000          #      cbe %rax, %rdi, .L20
00000240 : 932303                #      leaq (%rdx, %rax, 8), %rcx
00000243 : 3162                  #      movq (%rcx), %rdi
00000245 : 3969                  #      movq %rdi, (%r9)
00000247 : 3982                  #      movq %r8, (%rcx)
00000249 : 2160                  #      movq %rax, %rdi
0000024b :                       #  .L21:
0000024b : 932660                #      leaq (%rdi, %rdi, 1), %rcx
0000024e : A50201000000          #      leaq 1(%rcx), %rax
00000254 : 440596020000          #      cbl %rsi, %rax, .L20
0000025a : 939363                #      leaq (%rdx, %rdi, 8), %r9
0000025d : 3189                  #      movq (%r9), %r8
0000025f : 21A0                  #      movq %rax, %r10
00000261 : 93F303                #      leaq (%rdx, %rax, 8), %r15
00000264 : 31EF                  #      movq (%r15), %r14
00000266 : 468E6e020000          #      cbg %r14, %r8, .L22
0000026c : 2106                  #      movq %rdi, %rax
0000026e :                       #  .L22:
0000026e : 502002000000          #      addq $2, %rcx
00000274 : 46523a020000          #      cbg %rcx, %rsi, .L23
0000027a : B7F3A308000000        #      leaq 8(%rdx, %r10, 8), %r15
00000281 : 31BF                  #      movq (%r15), %r11
00000283 : 93F303                #      leaq (%rdx, %rax, 8), %r15
00000286 : 31EF                  #      movq (%r15), %r14
00000288 : 45EB3a020000          #      cble %r11, %r14, .L23
0000028e : 2102                  #      movq %rcx, %rax
00000290 : 4F003a020000          #      jmp .L23
00000296 :                       #  .L20:
00000296 : 31F7                  #      movq (%rsp), %r15
00000298 : 75E708000000          #      movq 8(%rsp), %r14
0000029e : 75B710000000          #      movq 16(%rsp), %r11
000002a4 : 507018000000          #      addq $24, %rsp
000002aa : 000B                  #      ret %r11
000002ac :                       #  heapify:
000002ac :                       #  .LFB11:
000002ac : 517020000000          #      subq $32, %rsp
000002b2 : 7DB718000000          #      movq %r11, 24(%rsp)
000002b8 : 7DC710000000          #      movq %r12, 16(%rsp)
000002be : 7D4708000000          #      movq %rbp, 8(%rsp)
000002c4 : 3917                  #      movq %rbx, (%rsp)
000002c6 : 2146                  #      movq %rdi, %rbp
000002c8 : 21C5                  #      movq %rsi, %r12
000002ca : A516feffffff          #      leaq -2(%rdi), %rbx
000002d0 : 561001000000          #      sarq $1, %rbx
000002d6 : 4F00f2020000          #      jmp .L28
000002dc :                       #  .L29:
000002dc : A554ffffffff          #      leaq -1(%rbp), %rsi
000002e2 : 213C                  #      movq %r12, %rdx
000002e4 : 2161                  #      movq %rbx, %rdi
000002e6 : 4EB020020000          #      call sift_down, %r11
000002ec : 511001000000          #      subq $1, %rbx
000002f2 :                       #  .L28:
000002f2 : F51000000000dc020000  #      cble $0, %rbx, .L29
000002fc : 3117                  #      movq (%rsp), %rbx
000002fe : 754708000000          #      movq 8(%rsp), %rbp
00000304 : 75C710000000          #      movq 16(%rsp), %r12
0000030a : 75B718000000          #      movq 24(%rsp), %r11
00000310 : 507020000000          #      addq $32, %rsp
00000316 : 000B                  #      ret %r11
00000318 :                       #  heap_sort:
00000318 :                       #  .LFB12:
00000318 : 517018000000          #      subq $24, %rsp
0000031e : 7DB710000000          #      movq %r11, 16(%rsp)
00000324 : 7D4708000000          #      movq %rbp, 8(%rsp)
0000032a : 3917                  #      movq %rbx, (%rsp)
0000032c : 2116                  #      movq %rdi, %rbx
0000032e : 2145                  #      movq %rsi, %rbp
00000330 : 4EB0ac020000          #      call heapify, %r11
00000336 : 511001000000          #      subq $1, %rbx
0000033c : 4F006f030000          #      jmp .L32
00000342 :                       #  .L33:
00000342 : B7041300000000        #      leaq 0(%rbp, %rbx, 8), %rax
00000349 : 3130                  #      movq (%rax), %rdx
0000034b : 752400000000          #      movq 0(%rbp), %rcx
00000351 : 3920                  #      movq %rcx, (%rax)
00000353 : 7D3400000000          #      movq %rdx, 0(%rbp)
00000359 : 511001000000          #      subq $1, %rbx
0000035f : 2134                  #      movq %rbp, %rdx
00000361 : 2151                  #      movq %rbx, %rsi
00000363 : 646000000000          #      movq $0, %edi
00000369 : 4EB020020000          #      call sift_down, %r11
0000036f :                       #  .L32:
0000036f : F4100000000042030000  #      cbl $0, %rbx, .L33
00000379 : 3117                  #      movq (%rsp), %rbx
0000037b : 754708000000          #      movq 8(%rsp), %rbp
00000381 : 75B710000000          #      movq 16(%rsp), %r11
00000387 : 507018000000          #      addq $24, %rsp
0000038d : 000B                  #      ret %r11
0000038f :                       #  run:
0000038f :                       #  .LFB13:
0000038f : 517020000000          #      subq $32, %rsp
00000395 : 7DB718000000          #      movq %r11, 24(%rsp)
0000039b : 7DC710000000          #      movq %r12, 16(%rsp)
000003a1 : 7D4708000000          #      movq %rbp, 8(%rsp)
000003a7 : 3917                  #      movq %rbx, (%rsp)
000003a9 : 640000000000          #      movq $0, %eax
000003af : 4EB0dd000000          #      call init_allocator, %r11
000003b5 : 640000000000          #      movq $0, %eax
000003bb : 4EB000000000          #      call read_long, %r11
000003c1 : 21C0                  #      movq %rax, %r12
000003c3 : 52C001000000          #      andq $1, %r12d
000003c9 : 520002000000          #      andq $2, %eax
000003cf : 2110                  #      movq %rax, %rbx
000003d1 : 640000000000          #      movq $0, %eax
000003d7 : 4EB000000000          #      call read_long, %r11
000003dd : 2140                  #      movq %rax, %rbp
000003df : 2160                  #      movq %rax, %rdi
000003e1 : 4EB022010000          #      call get_random_array, %r11
000003e7 : F010000000002d040000  #      cbe $0, %rbx, .L36
000003f1 : 2164                  #      movq %rbp, %rdi
000003f3 : 4EB0a1010000          #      call read_array, %r11
000003f9 : 2110                  #      movq %rax, %rbx
000003fb :                       #  .L37:
000003fb : 2151                  #      movq %rbx, %rsi
000003fd : 2164                  #      movq %rbp, %rdi
000003ff : 4EB018030000          #      call heap_sort, %r11
00000405 : F1C0000000003d040000  #      cbne $0, %r12, .L40
0000040f :                       #  .L35:
0000040f : 2101                  #      movq %rbx, %rax
00000411 : 3117                  #      movq (%rsp), %rbx
00000413 : 754708000000          #      movq 8(%rsp), %rbp
00000419 : 75C710000000          #      movq 16(%rsp), %r12
0000041f : 75B718000000          #      movq 24(%rsp), %r11
00000425 : 507020000000          #      addq $32, %rsp
0000042b : 000B                  #      ret %r11
0000042d :                       #  .L36:
0000042d : 2164                  #      movq %rbp, %rdi
0000042f : 4EB022010000          #      call get_random_array, %r11
00000435 : 2110                  #      movq %rax, %rbx
00000437 : 4F00fb030000          #      jmp .L37
0000043d :                       #  .L40:
0000043d : 2151                  #      movq %rbx, %rsi
0000043f : 2164                  #      movq %rbp, %rdi
00000441 : 4EB080000000          #      call print_array, %r11
00000447 : 4F000f040000          #      jmp .L35
0000044d :                       #  .LFE0:
0000044d :                       #  .LFE1:
0000044d :                       #  .LFE2:
0000044d :                       #  .LFE3:
0000044d :                       #  .LFE4:
0000044d :                       #  .LFE7:
0000044d :                       #  .LFE8:
0000044d :                       #  .LFE9:
0000044d :                       #  .LFE5:
0000044d :                       #  .LFE6:
0000044d :                       #  .LFE10:
0000044d :                       #  .LFE11:
0000044d :                       #  .LFE12:
0000044d :                       #  .LFE13:
00000450 : 0000000000000000      #      .comm cur_allocator,8,8
