00000000 :                       #  init_allocator:
00000000 :                       #  .LFB0:
00000000 : 517008000000          #      subq $8, %rsp
00000006 : 39B7                  #      movq %r11, (%rsp)
00000008 : A4B080040000          #      leaq cur_allocator, %r11
0000000e : 64A000000030          #      movq $805306368, %r10
00000014 : 39AB                  #      movq %r10, (%r11)
00000016 : 31B7                  #      movq (%rsp), %r11
00000018 : 507008000000          #      addq $8, %rsp
0000001e : 000B                  #      ret %r11
00000020 :                       #  allocate:
00000020 :                       #  .LFB1:
00000020 : 517008000000          #      subq $8, %rsp
00000026 : 39B7                  #      movq %r11, (%rsp)
00000028 : A4B080040000          #      leaq cur_allocator, %r11
0000002e : 310B                  #      movq (%r11), %rax
00000030 : 933063                #      leaq (%rax, %rdi, 8), %rdx
00000033 : A4B080040000          #      leaq cur_allocator, %r11
00000039 : 393B                  #      movq %rdx, (%r11)
0000003b : 31B7                  #      movq (%rsp), %r11
0000003d : 507008000000          #      addq $8, %rsp
00000043 : 000B                  #      ret %r11
00000045 :                       #  read_long:
00000045 :                       #  .LFB2:
00000045 : 517008000000          #      subq $8, %rsp
0000004b : 39B7                  #      movq %r11, (%rsp)
0000004d : A4B000000010          #      leaq 268435456, %r11
00000053 : 310B                  #      movq (%r11), %rax
00000055 : 31B7                  #      movq (%rsp), %r11
00000057 : 507008000000          #      addq $8, %rsp
0000005d : 000B                  #      ret %r11
0000005f :                       #  gen_random:
0000005f :                       #  .LFB3:
0000005f : 517008000000          #      subq $8, %rsp
00000065 : 39B7                  #      movq %r11, (%rsp)
00000067 : A4B001000010          #      leaq 268435457, %r11
0000006d : 310B                  #      movq (%r11), %rax
0000006f : 31B7                  #      movq (%rsp), %r11
00000071 : 507008000000          #      addq $8, %rsp
00000077 : 000B                  #      ret %r11
00000079 :                       #  write_long:
00000079 :                       #  .LFB4:
00000079 : 517008000000          #      subq $8, %rsp
0000007f : 39B7                  #      movq %r11, (%rsp)
00000081 : A4B002000010          #      leaq 268435458, %r11
00000087 : 396B                  #      movq %rdi, (%r11)
00000089 : 31B7                  #      movq (%rsp), %r11
0000008b : 507008000000          #      addq $8, %rsp
00000091 : 000B                  #      ret %r11
00000093 :                       #  get_argc:
00000093 :                       #  .LFB5:
00000093 : 517008000000          #      subq $8, %rsp
00000099 : 39B7                  #      movq %r11, (%rsp)
0000009b : A4B000000020          #      leaq 536870912, %r11
000000a1 : 310B                  #      movq (%r11), %rax
000000a3 : 31B7                  #      movq (%rsp), %r11
000000a5 : 507008000000          #      addq $8, %rsp
000000ab : 000B                  #      ret %r11
000000ad :                       #  get_argv:
000000ad :                       #  .LFB6:
000000ad : 517008000000          #      subq $8, %rsp
000000b3 : 39B7                  #      movq %r11, (%rsp)
000000b5 : 640008000020          #      movq $536870920, %eax
000000bb : 31B7                  #      movq (%rsp), %r11
000000bd : 507008000000          #      addq $8, %rsp
000000c3 : 000B                  #      ret %r11
000000c5 :                       #  get_random_array:
000000c5 :                       #  .LFB7:
000000c5 : 517028000000          #      subq $40, %rsp
000000cb : 7DB720000000          #      movq %r11, 32(%rsp)
000000d1 : 7DD718000000          #      movq %r13, 24(%rsp)
000000d7 : 7DC710000000          #      movq %r12, 16(%rsp)
000000dd : 7D4708000000          #      movq %rbp, 8(%rsp)
000000e3 : 3917                  #      movq %rbx, (%rsp)
000000e5 : 21C6                  #      movq %rdi, %r12
000000e7 : 4EB020000000          #      call allocate, %r11
000000ed : 21D0                  #      movq %rax, %r13
000000ef : 641000000000          #      movq $0, %ebx
000000f5 : 4F001a010000          #      jmp .L9
000000fb :                       #  .L10:
000000fb : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
00000102 : 640000000000          #      movq $0, %eax
00000108 : 4EB05f000000          #      call gen_random, %r11
0000010e : 7D0400000000          #      movq %rax, 0(%rbp)
00000114 : 501001000000          #      addq $1, %rbx
0000011a :                       #  .L9:
0000011a : 461Cfb000000          #      cbg %r12, %rbx, .L10
00000120 : 210D                  #      movq %r13, %rax
00000122 : 3117                  #      movq (%rsp), %rbx
00000124 : 754708000000          #      movq 8(%rsp), %rbp
0000012a : 75C710000000          #      movq 16(%rsp), %r12
00000130 : 75D718000000          #      movq 24(%rsp), %r13
00000136 : 75B720000000          #      movq 32(%rsp), %r11
0000013c : 507028000000          #      addq $40, %rsp
00000142 : 000B                  #      ret %r11
00000144 :                       #  read_array:
00000144 :                       #  .LFB8:
00000144 : 517028000000          #      subq $40, %rsp
0000014a : 7DB720000000          #      movq %r11, 32(%rsp)
00000150 : 7DD718000000          #      movq %r13, 24(%rsp)
00000156 : 7DC710000000          #      movq %r12, 16(%rsp)
0000015c : 7D4708000000          #      movq %rbp, 8(%rsp)
00000162 : 3917                  #      movq %rbx, (%rsp)
00000164 : 21C6                  #      movq %rdi, %r12
00000166 : 4EB020000000          #      call allocate, %r11
0000016c : 21D0                  #      movq %rax, %r13
0000016e : 641000000000          #      movq $0, %ebx
00000174 : 4F0099010000          #      jmp .L13
0000017a :                       #  .L14:
0000017a : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
00000181 : 640000000000          #      movq $0, %eax
00000187 : 4EB045000000          #      call read_long, %r11
0000018d : 7D0400000000          #      movq %rax, 0(%rbp)
00000193 : 501001000000          #      addq $1, %rbx
00000199 :                       #  .L13:
00000199 : 461C7a010000          #      cbg %r12, %rbx, .L14
0000019f : 210D                  #      movq %r13, %rax
000001a1 : 3117                  #      movq (%rsp), %rbx
000001a3 : 754708000000          #      movq 8(%rsp), %rbp
000001a9 : 75C710000000          #      movq 16(%rsp), %r12
000001af : 75D718000000          #      movq 24(%rsp), %r13
000001b5 : 75B720000000          #      movq 32(%rsp), %r11
000001bb : 507028000000          #      addq $40, %rsp
000001c1 : 000B                  #      ret %r11
000001c3 :                       #  print_array:
000001c3 :                       #  .LFB9:
000001c3 : 517020000000          #      subq $32, %rsp
000001c9 : 7DB718000000          #      movq %r11, 24(%rsp)
000001cf : 7DC710000000          #      movq %r12, 16(%rsp)
000001d5 : 7D4708000000          #      movq %rbp, 8(%rsp)
000001db : 3917                  #      movq %rbx, (%rsp)
000001dd : 2146                  #      movq %rdi, %rbp
000001df : 21C5                  #      movq %rsi, %r12
000001e1 : 641000000000          #      movq $0, %ebx
000001e7 : 4F00fe010000          #      jmp .L17
000001ed :                       #  .L18:
000001ed : 93BC13                #      leaq (%r12, %rbx, 8), %r11
000001f0 : 316B                  #      movq (%r11), %rdi
000001f2 : 4EB079000000          #      call write_long, %r11
000001f8 : 501001000000          #      addq $1, %rbx
000001fe :                       #  .L17:
000001fe : 4614ed010000          #      cbg %rbp, %rbx, .L18
00000204 : 3117                  #      movq (%rsp), %rbx
00000206 : 754708000000          #      movq 8(%rsp), %rbp
0000020c : 75C710000000          #      movq 16(%rsp), %r12
00000212 : 75B718000000          #      movq 24(%rsp), %r11
00000218 : 507020000000          #      addq $32, %rsp
0000021e : 000B                  #      ret %r11
00000220 :                       #  merge_runs:
00000220 :                       #  .LFB11:
00000220 : 517008000000          #      subq $8, %rsp
00000226 : 39B7                  #      movq %r11, (%rsp)
00000228 : F060000000000f030000  #      cbe $0, %rdi, .L34
00000232 : 517020000000          #      subq $32, %rsp
00000238 : 7DD718000000          #      movq %r13, 24(%rsp)
0000023e : 7DC710000000          #      movq %r12, 16(%rsp)
00000244 : 7D4708000000          #      movq %rbp, 8(%rsp)
0000024a : 3917                  #      movq %rbx, (%rsp)
0000024c : 4F00c4020000          #      jmp .L29
00000252 :                       #  .L30:
00000252 : 21D5                  #      movq %rsi, %r13
00000254 : 4F00d1020000          #      jmp .L22
0000025a :                       #  .L26:
0000025a : 500008000000          #      addq $8, %rax
00000260 : 39B2                  #      movq %r11, (%rcx)
00000262 : 4F0082020000          #      jmp .L27
00000268 :                       #  .L25:
00000268 : 31B8                  #      movq (%r8), %r11
0000026a : 39B2                  #      movq %r11, (%rcx)
0000026c : A58808000000          #      leaq 8(%r8), %r8
00000272 : 4F0082020000          #      jmp .L27
00000278 :                       #  .L24:
00000278 : 31B0                  #      movq (%rax), %r11
0000027a : 39B2                  #      movq %r11, (%rcx)
0000027c : A50008000000          #      leaq 8(%rax), %rax
00000282 :                       #  .L27:
00000282 : 502008000000          #      addq $8, %rcx
00000288 :                       #  .L23:
00000288 : 4992b2020000          #      cbae %rcx, %r9, .L35
0000028e : 49A878020000          #      cbae %r8, %r10, .L24
00000294 : 494068020000          #      cbae %rax, %rbp, .L25
0000029a : 3118                  #      movq (%r8), %rbx
0000029c : 31B0                  #      movq (%rax), %r11
0000029e : 451B5a020000          #      cble %r11, %rbx, .L26
000002a4 : 508008000000          #      addq $8, %r8
000002aa : 3912                  #      movq %rbx, (%rcx)
000002ac : 4F0082020000          #      jmp .L27
000002b2 :                       #  .L35:
000002b2 : 103C                  #      addq %r12, %rdx
000002b4 : 1165                  #      subq %rsi, %rdi
000002b6 : 116D                  #      subq %r13, %rdi
000002b8 : 2129                  #      movq %r9, %rcx
000002ba : F06000000000ed020000  #      cbe $0, %rdi, .L36
000002c4 :                       #  .L29:
000002c4 : 930550                #      leaq (%rsi, %rsi, 1), %rax
000002c7 : 456052020000          #      cble %rax, %rdi, .L30
000002cd : 21D6                  #      movq %rdi, %r13
000002cf : 11D5                  #      subq %rsi, %r13
000002d1 :                       #  .L22:
000002d1 : 93A353                #      leaq (%rdx, %rsi, 8), %r10
000002d4 : 934AD3                #      leaq (%r10, %r13, 8), %rbp
000002d7 : 93C5D0                #      leaq (%rsi, %r13, 1), %r12
000002da : 57C003000000          #      salq $3, %r12
000002e0 : 9392C0                #      leaq (%rcx, %r12, 1), %r9
000002e3 : 210A                  #      movq %r10, %rax
000002e5 : 2183                  #      movq %rdx, %r8
000002e7 : 4F0088020000          #      jmp .L23
000002ed :                       #  .L36:
000002ed : 3117                  #      movq (%rsp), %rbx
000002ef : 754708000000          #      movq 8(%rsp), %rbp
000002f5 : 75C710000000          #      movq 16(%rsp), %r12
000002fb : 75D718000000          #      movq 24(%rsp), %r13
00000301 : 75B720000000          #      movq 32(%rsp), %r11
00000307 : 507028000000          #      addq $40, %rsp
0000030d : 000B                  #      ret %r11
0000030f :                       #  .L34:
0000030f : 31B7                  #      movq (%rsp), %r11
00000311 : 507008000000          #      addq $8, %rsp
00000317 : 000B                  #      ret %r11
00000319 :                       #  merge_sort:
00000319 :                       #  .LFB12:
00000319 : 517030000000          #      subq $48, %rsp
0000031f : 7DB728000000          #      movq %r11, 40(%rsp)
00000325 : 7DE720000000          #      movq %r14, 32(%rsp)
0000032b : 7DD718000000          #      movq %r13, 24(%rsp)
00000331 : 7DC710000000          #      movq %r12, 16(%rsp)
00000337 : 7D4708000000          #      movq %rbp, 8(%rsp)
0000033d : 3917                  #      movq %rbx, (%rsp)
0000033f : 21C6                  #      movq %rdi, %r12
00000341 : 21E5                  #      movq %rsi, %r14
00000343 : 4EB020000000          #      call allocate, %r11
00000349 : 21D0                  #      movq %rax, %r13
0000034b : 214E                  #      movq %r14, %rbp
0000034d : 641001000000          #      movq $1, %ebx
00000353 : 4F006f030000          #      jmp .L38
00000359 :                       #  .L39:
00000359 : 212D                  #      movq %r13, %rcx
0000035b : 2134                  #      movq %rbp, %rdx
0000035d : 2151                  #      movq %rbx, %rsi
0000035f : 216C                  #      movq %r12, %rdi
00000361 : 4EB020020000          #      call merge_runs, %r11
00000367 : 1011                  #      addq %rbx, %rbx
00000369 : 2104                  #      movq %rbp, %rax
0000036b : 214D                  #      movq %r13, %rbp
0000036d : 21D0                  #      movq %rax, %r13
0000036f :                       #  .L38:
0000036f : 461C59030000          #      cbg %r12, %rbx, .L39
00000375 : 404Ea1030000          #      cbe %r14, %rbp, .L37
0000037b : 640000000000          #      movq $0, %eax
00000381 : 4F009b030000          #      jmp .L40
00000387 :                       #  .L42:
00000387 : B7B40300000000        #      leaq 0(%rbp, %rax, 8), %r11
0000038e : 313B                  #      movq (%r11), %rdx
00000390 : 93BE03                #      leaq (%r14, %rax, 8), %r11
00000393 : 393B                  #      movq %rdx, (%r11)
00000395 : 500001000000          #      addq $1, %rax
0000039b :                       #  .L40:
0000039b : 460C87030000          #      cbg %r12, %rax, .L42
000003a1 :                       #  .L37:
000003a1 : 3117                  #      movq (%rsp), %rbx
000003a3 : 754708000000          #      movq 8(%rsp), %rbp
000003a9 : 75C710000000          #      movq 16(%rsp), %r12
000003af : 75D718000000          #      movq 24(%rsp), %r13
000003b5 : 75E720000000          #      movq 32(%rsp), %r14
000003bb : 75B728000000          #      movq 40(%rsp), %r11
000003c1 : 507030000000          #      addq $48, %rsp
000003c7 : 000B                  #      ret %r11
000003c9 :                       #  run:
000003c9 :                       #  .LFB13:
000003c9 : 517020000000          #      subq $32, %rsp
000003cf : 7DB718000000          #      movq %r11, 24(%rsp)
000003d5 : 7DC710000000          #      movq %r12, 16(%rsp)
000003db : 7D4708000000          #      movq %rbp, 8(%rsp)
000003e1 : 3917                  #      movq %rbx, (%rsp)
000003e3 : 640000000000          #      movq $0, %eax
000003e9 : 4EB000000000          #      call init_allocator, %r11
000003ef : 640000000000          #      movq $0, %eax
000003f5 : 4EB045000000          #      call read_long, %r11
000003fb : 21C0                  #      movq %rax, %r12
000003fd : 52C001000000          #      andq $1, %r12d
00000403 : 520002000000          #      andq $2, %eax
00000409 : 2110                  #      movq %rax, %rbx
0000040b : 640000000000          #      movq $0, %eax
00000411 : 4EB045000000          #      call read_long, %r11
00000417 : 2140                  #      movq %rax, %rbp
00000419 : F010000000005f040000  #      cbe $0, %rbx, .L46
00000423 : 2160                  #      movq %rax, %rdi
00000425 : 4EB044010000          #      call read_array, %r11
0000042b : 2110                  #      movq %rax, %rbx
0000042d :                       #  .L47:
0000042d : 2151                  #      movq %rbx, %rsi
0000042f : 2164                  #      movq %rbp, %rdi
00000431 : 4EB019030000          #      call merge_sort, %r11
00000437 : F1C0000000006f040000  #      cbne $0, %r12, .L50
00000441 :                       #  .L45:
00000441 : 2101                  #      movq %rbx, %rax
00000443 : 3117                  #      movq (%rsp), %rbx
00000445 : 754708000000          #      movq 8(%rsp), %rbp
0000044b : 75C710000000          #      movq 16(%rsp), %r12
00000451 : 75B718000000          #      movq 24(%rsp), %r11
00000457 : 507020000000          #      addq $32, %rsp
0000045d : 000B                  #      ret %r11
0000045f :                       #  .L46:
0000045f : 2160                  #      movq %rax, %rdi
00000461 : 4EB0c5000000          #      call get_random_array, %r11
00000467 : 2110                  #      movq %rax, %rbx
00000469 : 4F002d040000          #      jmp .L47
0000046f :                       #  .L50:
0000046f : 2151                  #      movq %rbx, %rsi
00000471 : 2164                  #      movq %rbp, %rdi
00000473 : 4EB0c3010000          #      call print_array, %r11
00000479 : 4F0041040000          #      jmp .L45
0000047f :                       #  .LFE0:
0000047f :                       #  .LFE1:
0000047f :                       #  .LFE2:
0000047f :                       #  .LFE3:
0000047f :                       #  .LFE4:
0000047f :                       #  .LFE5:
0000047f :                       #  .LFE6:
0000047f :                       #  .LFE7:
0000047f :                       #  .LFE8:
0000047f :                       #  .LFE9:
0000047f :                       #  .LFE11:
0000047f :                       #  .LFE12:
0000047f :                       #  .LFE13:
00000480 : 0000000000000000      #      .comm cur_allocator,8,8
