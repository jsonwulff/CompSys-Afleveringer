00000000 :                       #  init_allocator:
00000000 :                       #  .LFB0:
00000000 : 517008000000          #      subq $8, %rsp
00000006 : 39B7                  #      movq %r11, (%rsp)
00000008 : A4B0a0050000          #      leaq cur_allocator, %r11
0000000e : 64A000000030          #      movq $805306368, %r10
00000014 : 39AB                  #      movq %r10, (%r11)
00000016 : 31B7                  #      movq (%rsp), %r11
00000018 : 507008000000          #      addq $8, %rsp
0000001e : 000B                  #      ret %r11
00000020 :                       #  allocate:
00000020 :                       #  .LFB1:
00000020 : 517008000000          #      subq $8, %rsp
00000026 : 39B7                  #      movq %r11, (%rsp)
00000028 : A4B0a0050000          #      leaq cur_allocator, %r11
0000002e : 310B                  #      movq (%r11), %rax
00000030 : 933063                #      leaq (%rax, %rdi, 8), %rdx
00000033 : A4B0a0050000          #      leaq cur_allocator, %r11
00000039 : 393B                  #      movq %rdx, (%r11)
0000003b : 31B7                  #      movq (%rsp), %r11
0000003d : 507008000000          #      addq $8, %rsp
00000043 : 000B                  #      ret %r11
00000045 :                       #  read_long:
00000045 :                       #  .LFB2:
00000045 : 517008000000          #      subq $8, %rsp
0000004b : 39B7                  #      movq %r11, (%rsp)
0000004d : A4B000000010          #      leaq 268435456, %r11
00000053 : 310B                  #      movq (%r11), %rax
00000055 : 31B7                  #      movq (%rsp), %r11
00000057 : 507008000000          #      addq $8, %rsp
0000005d : 000B                  #      ret %r11
0000005f :                       #  gen_random:
0000005f :                       #  .LFB3:
0000005f : 517008000000          #      subq $8, %rsp
00000065 : 39B7                  #      movq %r11, (%rsp)
00000067 : A4B001000010          #      leaq 268435457, %r11
0000006d : 310B                  #      movq (%r11), %rax
0000006f : 31B7                  #      movq (%rsp), %r11
00000071 : 507008000000          #      addq $8, %rsp
00000077 : 000B                  #      ret %r11
00000079 :                       #  write_long:
00000079 :                       #  .LFB4:
00000079 : 517008000000          #      subq $8, %rsp
0000007f : 39B7                  #      movq %r11, (%rsp)
00000081 : A4B002000010          #      leaq 268435458, %r11
00000087 : 396B                  #      movq %rdi, (%r11)
00000089 : 31B7                  #      movq (%rsp), %r11
0000008b : 507008000000          #      addq $8, %rsp
00000091 : 000B                  #      ret %r11
00000093 :                       #  get_argc:
00000093 :                       #  .LFB5:
00000093 : 517008000000          #      subq $8, %rsp
00000099 : 39B7                  #      movq %r11, (%rsp)
0000009b : A4B000000020          #      leaq 536870912, %r11
000000a1 : 310B                  #      movq (%r11), %rax
000000a3 : 31B7                  #      movq (%rsp), %r11
000000a5 : 507008000000          #      addq $8, %rsp
000000ab : 000B                  #      ret %r11
000000ad :                       #  get_argv:
000000ad :                       #  .LFB6:
000000ad : 517008000000          #      subq $8, %rsp
000000b3 : 39B7                  #      movq %r11, (%rsp)
000000b5 : 640008000020          #      movq $536870920, %eax
000000bb : 31B7                  #      movq (%rsp), %r11
000000bd : 507008000000          #      addq $8, %rsp
000000c3 : 000B                  #      ret %r11
000000c5 :                       #  get_random_array:
000000c5 :                       #  .LFB7:
000000c5 : 517028000000          #      subq $40, %rsp
000000cb : 7DB720000000          #      movq %r11, 32(%rsp)
000000d1 : 7DD718000000          #      movq %r13, 24(%rsp)
000000d7 : 7DC710000000          #      movq %r12, 16(%rsp)
000000dd : 7D4708000000          #      movq %rbp, 8(%rsp)
000000e3 : 3917                  #      movq %rbx, (%rsp)
000000e5 : 21C6                  #      movq %rdi, %r12
000000e7 : 4EB020000000          #      call allocate, %r11
000000ed : 21D0                  #      movq %rax, %r13
000000ef : 641000000000          #      movq $0, %ebx
000000f5 : 4F001a010000          #      jmp .L9
000000fb :                       #  .L10:
000000fb : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
00000102 : 640000000000          #      movq $0, %eax
00000108 : 4EB05f000000          #      call gen_random, %r11
0000010e : 7D0400000000          #      movq %rax, 0(%rbp)
00000114 : 501001000000          #      addq $1, %rbx
0000011a :                       #  .L9:
0000011a : 461Cfb000000          #      cbg %r12, %rbx, .L10
00000120 : 210D                  #      movq %r13, %rax
00000122 : 3117                  #      movq (%rsp), %rbx
00000124 : 754708000000          #      movq 8(%rsp), %rbp
0000012a : 75C710000000          #      movq 16(%rsp), %r12
00000130 : 75D718000000          #      movq 24(%rsp), %r13
00000136 : 75B720000000          #      movq 32(%rsp), %r11
0000013c : 507028000000          #      addq $40, %rsp
00000142 : 000B                  #      ret %r11
00000144 :                       #  read_array:
00000144 :                       #  .LFB8:
00000144 : 517028000000          #      subq $40, %rsp
0000014a : 7DB720000000          #      movq %r11, 32(%rsp)
00000150 : 7DD718000000          #      movq %r13, 24(%rsp)
00000156 : 7DC710000000          #      movq %r12, 16(%rsp)
0000015c : 7D4708000000          #      movq %rbp, 8(%rsp)
00000162 : 3917                  #      movq %rbx, (%rsp)
00000164 : 21C6                  #      movq %rdi, %r12
00000166 : 4EB020000000          #      call allocate, %r11
0000016c : 21D0                  #      movq %rax, %r13
0000016e : 641000000000          #      movq $0, %ebx
00000174 : 4F0099010000          #      jmp .L13
0000017a :                       #  .L14:
0000017a : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
00000181 : 640000000000          #      movq $0, %eax
00000187 : 4EB045000000          #      call read_long, %r11
0000018d : 7D0400000000          #      movq %rax, 0(%rbp)
00000193 : 501001000000          #      addq $1, %rbx
00000199 :                       #  .L13:
00000199 : 461C7a010000          #      cbg %r12, %rbx, .L14
0000019f : 210D                  #      movq %r13, %rax
000001a1 : 3117                  #      movq (%rsp), %rbx
000001a3 : 754708000000          #      movq 8(%rsp), %rbp
000001a9 : 75C710000000          #      movq 16(%rsp), %r12
000001af : 75D718000000          #      movq 24(%rsp), %r13
000001b5 : 75B720000000          #      movq 32(%rsp), %r11
000001bb : 507028000000          #      addq $40, %rsp
000001c1 : 000B                  #      ret %r11
000001c3 :                       #  print_array:
000001c3 :                       #  .LFB9:
000001c3 : 517020000000          #      subq $32, %rsp
000001c9 : 7DB718000000          #      movq %r11, 24(%rsp)
000001cf : 7DC710000000          #      movq %r12, 16(%rsp)
000001d5 : 7D4708000000          #      movq %rbp, 8(%rsp)
000001db : 3917                  #      movq %rbx, (%rsp)
000001dd : 2146                  #      movq %rdi, %rbp
000001df : 21C5                  #      movq %rsi, %r12
000001e1 : 641000000000          #      movq $0, %ebx
000001e7 : 4F00fe010000          #      jmp .L17
000001ed :                       #  .L18:
000001ed : 93BC13                #      leaq (%r12, %rbx, 8), %r11
000001f0 : 316B                  #      movq (%r11), %rdi
000001f2 : 4EB079000000          #      call write_long, %r11
000001f8 : 501001000000          #      addq $1, %rbx
000001fe :                       #  .L17:
000001fe : 4614ed010000          #      cbg %rbp, %rbx, .L18
00000204 : 3117                  #      movq (%rsp), %rbx
00000206 : 754708000000          #      movq 8(%rsp), %rbp
0000020c : 75C710000000          #      movq 16(%rsp), %r12
00000212 : 75B718000000          #      movq 24(%rsp), %r11
00000218 : 507020000000          #      addq $32, %rsp
0000021e : 000B                  #      ret %r11
00000220 :                       #  merge_sort:
00000220 :                       #  .LFB11:
00000220 : 517030000000          #      subq $48, %rsp
00000226 : 7DB728000000          #      movq %r11, 40(%rsp)
0000022c : 7DE720000000          #      movq %r14, 32(%rsp)
00000232 : 7DD718000000          #      movq %r13, 24(%rsp)
00000238 : 7DC710000000          #      movq %r12, 16(%rsp)
0000023e : 7D4708000000          #      movq %rbp, 8(%rsp)
00000244 : 3917                  #      movq %rbx, (%rsp)
00000246 : 21C5                  #      movq %rsi, %r12
00000248 : 2113                  #      movq %rdx, %rbx
0000024a : 2142                  #      movq %rcx, %rbp
0000024c : 930550                #      leaq (%rsi, %rsi, 1), %rax
0000024f : 47067b020000          #      cbge %rdi, %rax, .L44
00000255 : 21D6                  #      movq %rdi, %r13
00000257 : 11D5                  #      subq %rsi, %r13
00000259 :                       #  .L21:
00000259 : F460020000006b030000  #      cbl $2, %rdi, .L22
00000263 : B620C300000000        #      leaq 0(, %r12, 8), %rcx
0000026a : 930120                #      leaq (%rbx, %rcx, 1), %rax
0000026d : 1024                  #      addq %rbp, %rcx
0000026f : 2134                  #      movq %rbp, %rdx
00000271 : 2150                  #      movq %rax, %rsi
00000273 : 2161                  #      movq %rbx, %rdi
00000275 : 4F00b1020000          #      jmp .L23
0000027b :                       #  .L44:
0000027b : 21D5                  #      movq %rsi, %r13
0000027d : 4F0059020000          #      jmp .L21
00000283 :                       #  .L26:
00000283 : 505008000000          #      addq $8, %rsi
00000289 : 3983                  #      movq %r8, (%rdx)
0000028b : 4F00ab020000          #      jmp .L27
00000291 :                       #  .L25:
00000291 : 3186                  #      movq (%rdi), %r8
00000293 : 3983                  #      movq %r8, (%rdx)
00000295 : A56608000000          #      leaq 8(%rdi), %rdi
0000029b : 4F00ab020000          #      jmp .L27
000002a1 :                       #  .L24:
000002a1 : 3185                  #      movq (%rsi), %r8
000002a3 : 3983                  #      movq %r8, (%rdx)
000002a5 : A55508000000          #      leaq 8(%rsi), %rsi
000002ab :                       #  .L27:
000002ab : 503008000000          #      addq $8, %rdx
000002b1 :                       #  .L23:
000002b1 : 4923db020000          #      cbae %rdx, %rcx, .L46
000002b7 : 4906a1020000          #      cbae %rdi, %rax, .L24
000002bd : 490591020000          #      cbae %rsi, %rax, .L25
000002c3 : 3196                  #      movq (%rdi), %r9
000002c5 : 3185                  #      movq (%rsi), %r8
000002c7 : 459883020000          #      cble %r8, %r9, .L26
000002cd : 506008000000          #      addq $8, %rdi
000002d3 : 3993                  #      movq %r9, (%rdx)
000002d5 : 4F00ab020000          #      jmp .L27
000002db :                       #  .L46:
000002db : 218D                  #      movq %r13, %r8
000002dd : 9362D3                #      leaq (%rcx, %r13, 8), %rdi
000002e0 : 2132                  #      movq %rcx, %rdx
000002e2 : 4F00f8020000          #      jmp .L29
000002e8 :                       #  .L30:
000002e8 : 3150                  #      movq (%rax), %rsi
000002ea : 3953                  #      movq %rsi, (%rdx)
000002ec : 503008000000          #      addq $8, %rdx
000002f2 : A50008000000          #      leaq 8(%rax), %rax
000002f8 :                       #  .L29:
000002f8 : 4A63e8020000          #      cbb %rdx, %rdi, .L30
000002fe : 10C8                  #      addq %r8, %r12
00000300 : 9331C3                #      leaq (%rbx, %r12, 8), %rdx
00000303 : 2102                  #      movq %rcx, %rax
00000305 : 4F003d030000          #      jmp .L31
0000030b :                       #  .L34:
0000030b : 500008000000          #      addq $8, %rax
00000311 : 3951                  #      movq %rsi, (%rbx)
00000313 : 4F0037030000          #      jmp .L35
00000319 :                       #  .L33:
00000319 : 755400000000          #      movq 0(%rbp), %rsi
0000031f : 3951                  #      movq %rsi, (%rbx)
00000321 : A54408000000          #      leaq 8(%rbp), %rbp
00000327 : 4F0037030000          #      jmp .L35
0000032d :                       #  .L32:
0000032d : 3150                  #      movq (%rax), %rsi
0000032f : 3951                  #      movq %rsi, (%rbx)
00000331 : A50008000000          #      leaq 8(%rax), %rax
00000337 :                       #  .L35:
00000337 : 501008000000          #      addq $8, %rbx
0000033d :                       #  .L31:
0000033d : 49312d040000          #      cbae %rbx, %rdx, .L20
00000343 : 4B422d030000          #      cbbe %rcx, %rbp, .L32
00000349 : 4B0619030000          #      cbbe %rdi, %rax, .L33
0000034f : 758400000000          #      movq 0(%rbp), %r8
00000355 : 3150                  #      movq (%rax), %rsi
00000357 : 45850b030000          #      cble %rsi, %r8, .L34
0000035d : 504008000000          #      addq $8, %rbp
00000363 : 3981                  #      movq %r8, (%rbx)
00000365 : 4F0037030000          #      jmp .L35
0000036b :                       #  .L22:
0000036b : A50C01000000          #      leaq 1(%r12), %rax
00000371 : 2150                  #      movq %rax, %rsi
00000373 : 58503f000000          #      shrq $63, %rsi
00000379 : 1050                  #      addq %rax, %rsi
0000037b : 565001000000          #      sarq $1, %rsi
00000381 : 2124                  #      movq %rbp, %rcx
00000383 : 2131                  #      movq %rbx, %rdx
00000385 : 216C                  #      movq %r12, %rdi
00000387 : 4EB020020000          #      call merge_sort, %r11
0000038d : B630C300000000        #      leaq 0(, %r12, 8), %rdx
00000394 : B7E43000000000        #      leaq 0(%rbp, %rdx, 1), %r14
0000039b : A50D01000000          #      leaq 1(%r13), %rax
000003a1 : 1031                  #      addq %rbx, %rdx
000003a3 : 2150                  #      movq %rax, %rsi
000003a5 : 58503f000000          #      shrq $63, %rsi
000003ab : 1050                  #      addq %rax, %rsi
000003ad : 565001000000          #      sarq $1, %rsi
000003b3 : 212E                  #      movq %r14, %rcx
000003b5 : 216D                  #      movq %r13, %rdi
000003b7 : 4EB020020000          #      call merge_sort, %r11
000003bd : 936ED3                #      leaq (%r14, %r13, 8), %rdi
000003c0 : 10CD                  #      addq %r13, %r12
000003c2 : 9331C3                #      leaq (%rbx, %r12, 8), %rdx
000003c5 : 210E                  #      movq %r14, %rax
000003c7 : 4F00ff030000          #      jmp .L38
000003cd :                       #  .L41:
000003cd : 500008000000          #      addq $8, %rax
000003d3 : 3921                  #      movq %rcx, (%rbx)
000003d5 : 4F00f9030000          #      jmp .L42
000003db :                       #  .L40:
000003db : 752400000000          #      movq 0(%rbp), %rcx
000003e1 : 3921                  #      movq %rcx, (%rbx)
000003e3 : A54408000000          #      leaq 8(%rbp), %rbp
000003e9 : 4F00f9030000          #      jmp .L42
000003ef :                       #  .L39:
000003ef : 3120                  #      movq (%rax), %rcx
000003f1 : 3921                  #      movq %rcx, (%rbx)
000003f3 : A50008000000          #      leaq 8(%rax), %rax
000003f9 :                       #  .L42:
000003f9 : 501008000000          #      addq $8, %rbx
000003ff :                       #  .L38:
000003ff : 49312d040000          #      cbae %rbx, %rdx, .L20
00000405 : 49E4ef030000          #      cbae %rbp, %r14, .L39
0000040b : 4960db030000          #      cbae %rax, %rdi, .L40
00000411 : 755400000000          #      movq 0(%rbp), %rsi
00000417 : 3120                  #      movq (%rax), %rcx
00000419 : 4552cd030000          #      cble %rcx, %rsi, .L41
0000041f : 504008000000          #      addq $8, %rbp
00000425 : 3951                  #      movq %rsi, (%rbx)
00000427 : 4F00f9030000          #      jmp .L42
0000042d :                       #  .L20:
0000042d : 3117                  #      movq (%rsp), %rbx
0000042f : 754708000000          #      movq 8(%rsp), %rbp
00000435 : 75C710000000          #      movq 16(%rsp), %r12
0000043b : 75D718000000          #      movq 24(%rsp), %r13
00000441 : 75E720000000          #      movq 32(%rsp), %r14
00000447 : 75B728000000          #      movq 40(%rsp), %r11
0000044d : 507030000000          #      addq $48, %rsp
00000453 : 000B                  #      ret %r11
00000455 :                       #  run_merge_sort:
00000455 :                       #  .LFB12:
00000455 : 517020000000          #      subq $32, %rsp
0000045b : 7DB718000000          #      movq %r11, 24(%rsp)
00000461 : 7DC710000000          #      movq %r12, 16(%rsp)
00000467 : 7D4708000000          #      movq %rbp, 8(%rsp)
0000046d : 3917                  #      movq %rbx, (%rsp)
0000046f : 2116                  #      movq %rdi, %rbx
00000471 : 21C5                  #      movq %rsi, %r12
00000473 : 4EB020000000          #      call allocate, %r11
00000479 : 2140                  #      movq %rax, %rbp
0000047b : A50101000000          #      leaq 1(%rbx), %rax
00000481 : 2150                  #      movq %rax, %rsi
00000483 : 58503f000000          #      shrq $63, %rsi
00000489 : 1050                  #      addq %rax, %rsi
0000048b : 565001000000          #      sarq $1, %rsi
00000491 : 2124                  #      movq %rbp, %rcx
00000493 : 213C                  #      movq %r12, %rdx
00000495 : 2161                  #      movq %rbx, %rdi
00000497 : 4EB020020000          #      call merge_sort, %r11
0000049d : 40C4c9040000          #      cbe %rbp, %r12, .L47
000004a3 : 640000000000          #      movq $0, %eax
000004a9 : 4F00c3040000          #      jmp .L48
000004af :                       #  .L50:
000004af : B7B40300000000        #      leaq 0(%rbp, %rax, 8), %r11
000004b6 : 313B                  #      movq (%r11), %rdx
000004b8 : 93BC03                #      leaq (%r12, %rax, 8), %r11
000004bb : 393B                  #      movq %rdx, (%r11)
000004bd : 500001000000          #      addq $1, %rax
000004c3 :                       #  .L48:
000004c3 : 4601af040000          #      cbg %rbx, %rax, .L50
000004c9 :                       #  .L47:
000004c9 : 3117                  #      movq (%rsp), %rbx
000004cb : 754708000000          #      movq 8(%rsp), %rbp
000004d1 : 75C710000000          #      movq 16(%rsp), %r12
000004d7 : 75B718000000          #      movq 24(%rsp), %r11
000004dd : 507020000000          #      addq $32, %rsp
000004e3 : 000B                  #      ret %r11
000004e5 :                       #  run:
000004e5 :                       #  .LFB13:
000004e5 : 517020000000          #      subq $32, %rsp
000004eb : 7DB718000000          #      movq %r11, 24(%rsp)
000004f1 : 7DC710000000          #      movq %r12, 16(%rsp)
000004f7 : 7D4708000000          #      movq %rbp, 8(%rsp)
000004fd : 3917                  #      movq %rbx, (%rsp)
000004ff : 640000000000          #      movq $0, %eax
00000505 : 4EB000000000          #      call init_allocator, %r11
0000050b : 640000000000          #      movq $0, %eax
00000511 : 4EB045000000          #      call read_long, %r11
00000517 : 21C0                  #      movq %rax, %r12
00000519 : 52C001000000          #      andq $1, %r12d
0000051f : 520002000000          #      andq $2, %eax
00000525 : 2110                  #      movq %rax, %rbx
00000527 : 640000000000          #      movq $0, %eax
0000052d : 4EB045000000          #      call read_long, %r11
00000533 : 2140                  #      movq %rax, %rbp
00000535 : F010000000007b050000  #      cbe $0, %rbx, .L54
0000053f : 2160                  #      movq %rax, %rdi
00000541 : 4EB044010000          #      call read_array, %r11
00000547 : 2110                  #      movq %rax, %rbx
00000549 :                       #  .L55:
00000549 : 2151                  #      movq %rbx, %rsi
0000054b : 2164                  #      movq %rbp, %rdi
0000054d : 4EB055040000          #      call run_merge_sort, %r11
00000553 : F1C0000000008b050000  #      cbne $0, %r12, .L58
0000055d :                       #  .L53:
0000055d : 2101                  #      movq %rbx, %rax
0000055f : 3117                  #      movq (%rsp), %rbx
00000561 : 754708000000          #      movq 8(%rsp), %rbp
00000567 : 75C710000000          #      movq 16(%rsp), %r12
0000056d : 75B718000000          #      movq 24(%rsp), %r11
00000573 : 507020000000          #      addq $32, %rsp
00000579 : 000B                  #      ret %r11
0000057b :                       #  .L54:
0000057b : 2160                  #      movq %rax, %rdi
0000057d : 4EB0c5000000          #      call get_random_array, %r11
00000583 : 2110                  #      movq %rax, %rbx
00000585 : 4F0049050000          #      jmp .L55
0000058b :                       #  .L58:
0000058b : 2151                  #      movq %rbx, %rsi
0000058d : 2164                  #      movq %rbp, %rdi
0000058f : 4EB0c3010000          #      call print_array, %r11
00000595 : 4F005d050000          #      jmp .L53
0000059b :                       #  .LFE0:
0000059b :                       #  .LFE1:
0000059b :                       #  .LFE2:
0000059b :                       #  .LFE3:
0000059b :                       #  .LFE4:
0000059b :                       #  .LFE5:
0000059b :                       #  .LFE6:
0000059b :                       #  .LFE7:
0000059b :                       #  .LFE8:
0000059b :                       #  .LFE9:
0000059b :                       #  .LFE11:
0000059b :                       #  .LFE12:
0000059b :                       #  .LFE13:
000005a0 : 0000000000000000      #      .comm cur_allocator,8,8
