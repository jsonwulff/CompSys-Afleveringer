00000000 :                       #  read_long:
00000000 :                       #  .LFB0:
00000000 : 517008000000          #      subq $8, %rsp
00000006 : 39B7                  #      movq %r11, (%rsp)
00000008 : A4B000000010          #      leaq 268435456, %r11
0000000e : 310B                  #      movq (%r11), %rax
00000010 : 31B7                  #      movq (%rsp), %r11
00000012 : 507008000000          #      addq $8, %rsp
00000018 : 000B                  #      ret %r11
0000001a :                       #  gen_random:
0000001a :                       #  .LFB1:
0000001a : 517008000000          #      subq $8, %rsp
00000020 : 39B7                  #      movq %r11, (%rsp)
00000022 : A4B001000010          #      leaq 268435457, %r11
00000028 : 310B                  #      movq (%r11), %rax
0000002a : 31B7                  #      movq (%rsp), %r11
0000002c : 507008000000          #      addq $8, %rsp
00000032 : 000B                  #      ret %r11
00000034 :                       #  write_long:
00000034 :                       #  .LFB2:
00000034 : 517008000000          #      subq $8, %rsp
0000003a : 39B7                  #      movq %r11, (%rsp)
0000003c : A4B002000010          #      leaq 268435458, %r11
00000042 : 396B                  #      movq %rdi, (%r11)
00000044 : 31B7                  #      movq (%rsp), %r11
00000046 : 507008000000          #      addq $8, %rsp
0000004c : 000B                  #      ret %r11
0000004e :                       #  get_argc:
0000004e :                       #  .LFB3:
0000004e : 517008000000          #      subq $8, %rsp
00000054 : 39B7                  #      movq %r11, (%rsp)
00000056 : A4B000000020          #      leaq 536870912, %r11
0000005c : 310B                  #      movq (%r11), %rax
0000005e : 31B7                  #      movq (%rsp), %r11
00000060 : 507008000000          #      addq $8, %rsp
00000066 : 000B                  #      ret %r11
00000068 :                       #  get_argv:
00000068 :                       #  .LFB4:
00000068 : 517008000000          #      subq $8, %rsp
0000006e : 39B7                  #      movq %r11, (%rsp)
00000070 : 640008000020          #      movq $536870920, %eax
00000076 : 31B7                  #      movq (%rsp), %r11
00000078 : 507008000000          #      addq $8, %rsp
0000007e : 000B                  #      ret %r11
00000080 :                       #  print_array:
00000080 :                       #  .LFB7:
00000080 : 517020000000          #      subq $32, %rsp
00000086 : 7DB718000000          #      movq %r11, 24(%rsp)
0000008c : 7DC710000000          #      movq %r12, 16(%rsp)
00000092 : 7D4708000000          #      movq %rbp, 8(%rsp)
00000098 : 3917                  #      movq %rbx, (%rsp)
0000009a : 2146                  #      movq %rdi, %rbp
0000009c : 21C5                  #      movq %rsi, %r12
0000009e : 641000000000          #      movq $0, %ebx
000000a4 : 4F00bb000000          #      jmp .L7
000000aa :                       #  .L8:
000000aa : 93BC13                #      leaq (%r12, %rbx, 8), %r11
000000ad : 316B                  #      movq (%r11), %rdi
000000af : 4EB034000000          #      call write_long, %r11
000000b5 : 501001000000          #      addq $1, %rbx
000000bb :                       #  .L7:
000000bb : 4614aa000000          #      cbg %rbp, %rbx, .L8
000000c1 : 3117                  #      movq (%rsp), %rbx
000000c3 : 754708000000          #      movq 8(%rsp), %rbp
000000c9 : 75C710000000          #      movq 16(%rsp), %r12
000000cf : 75B718000000          #      movq 24(%rsp), %r11
000000d5 : 507020000000          #      addq $32, %rsp
000000db : 000B                  #      ret %r11
000000dd :                       #  init_allocator:
000000dd :                       #  .LFB8:
000000dd : 517008000000          #      subq $8, %rsp
000000e3 : 39B7                  #      movq %r11, (%rsp)
000000e5 : A4B020040000          #      leaq cur_allocator, %r11
000000eb : 64A000000030          #      movq $805306368, %r10
000000f1 : 39AB                  #      movq %r10, (%r11)
000000f3 : 31B7                  #      movq (%rsp), %r11
000000f5 : 507008000000          #      addq $8, %rsp
000000fb : 000B                  #      ret %r11
000000fd :                       #  allocate:
000000fd :                       #  .LFB9:
000000fd : 517008000000          #      subq $8, %rsp
00000103 : 39B7                  #      movq %r11, (%rsp)
00000105 : A4B020040000          #      leaq cur_allocator, %r11
0000010b : 310B                  #      movq (%r11), %rax
0000010d : 933063                #      leaq (%rax, %rdi, 8), %rdx
00000110 : A4B020040000          #      leaq cur_allocator, %r11
00000116 : 393B                  #      movq %rdx, (%r11)
00000118 : 31B7                  #      movq (%rsp), %r11
0000011a : 507008000000          #      addq $8, %rsp
00000120 : 000B                  #      ret %r11
00000122 :                       #  get_random_array:
00000122 :                       #  .LFB5:
00000122 : 517028000000          #      subq $40, %rsp
00000128 : 7DB720000000          #      movq %r11, 32(%rsp)
0000012e : 7DD718000000          #      movq %r13, 24(%rsp)
00000134 : 7DC710000000          #      movq %r12, 16(%rsp)
0000013a : 7D4708000000          #      movq %rbp, 8(%rsp)
00000140 : 3917                  #      movq %rbx, (%rsp)
00000142 : 21C6                  #      movq %rdi, %r12
00000144 : 4EB0fd000000          #      call allocate, %r11
0000014a : 21D0                  #      movq %rax, %r13
0000014c : 641000000000          #      movq $0, %ebx
00000152 : 4F0077010000          #      jmp .L13
00000158 :                       #  .L14:
00000158 : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
0000015f : 640000000000          #      movq $0, %eax
00000165 : 4EB01a000000          #      call gen_random, %r11
0000016b : 7D0400000000          #      movq %rax, 0(%rbp)
00000171 : 501001000000          #      addq $1, %rbx
00000177 :                       #  .L13:
00000177 : 461C58010000          #      cbg %r12, %rbx, .L14
0000017d : 210D                  #      movq %r13, %rax
0000017f : 3117                  #      movq (%rsp), %rbx
00000181 : 754708000000          #      movq 8(%rsp), %rbp
00000187 : 75C710000000          #      movq 16(%rsp), %r12
0000018d : 75D718000000          #      movq 24(%rsp), %r13
00000193 : 75B720000000          #      movq 32(%rsp), %r11
00000199 : 507028000000          #      addq $40, %rsp
0000019f : 000B                  #      ret %r11
000001a1 :                       #  read_array:
000001a1 :                       #  .LFB6:
000001a1 : 517028000000          #      subq $40, %rsp
000001a7 : 7DB720000000          #      movq %r11, 32(%rsp)
000001ad : 7DD718000000          #      movq %r13, 24(%rsp)
000001b3 : 7DC710000000          #      movq %r12, 16(%rsp)
000001b9 : 7D4708000000          #      movq %rbp, 8(%rsp)
000001bf : 3917                  #      movq %rbx, (%rsp)
000001c1 : 21C6                  #      movq %rdi, %r12
000001c3 : 4EB0fd000000          #      call allocate, %r11
000001c9 : 21D0                  #      movq %rax, %r13
000001cb : 641000000000          #      movq $0, %ebx
000001d1 : 4F00f6010000          #      jmp .L17
000001d7 :                       #  .L18:
000001d7 : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
000001de : 640000000000          #      movq $0, %eax
000001e4 : 4EB000000000          #      call read_long, %r11
000001ea : 7D0400000000          #      movq %rax, 0(%rbp)
000001f0 : 501001000000          #      addq $1, %rbx
000001f6 :                       #  .L17:
000001f6 : 461Cd7010000          #      cbg %r12, %rbx, .L18
000001fc : 210D                  #      movq %r13, %rax
000001fe : 3117                  #      movq (%rsp), %rbx
00000200 : 754708000000          #      movq 8(%rsp), %rbp
00000206 : 75C710000000          #      movq 16(%rsp), %r12
0000020c : 75D718000000          #      movq 24(%rsp), %r13
00000212 : 75B720000000          #      movq 32(%rsp), %r11
00000218 : 507028000000          #      addq $40, %rsp
0000021e : 000B                  #      ret %r11
00000220 :                       #  quick_sort:
00000220 :                       #  .LFB11:
00000220 : 517010000000          #      subq $16, %rsp
00000226 : 7DB708000000          #      movq %r11, 8(%rsp)
0000022c : 39F7                  #      movq %r15, (%rsp)
0000022e : 455349030000          #      cble %rdx, %rsi, .L35
00000234 : 2183                  #      movq %rdx, %r8
00000236 : 1185                  #      subq %rsi, %r8
00000238 : F48007000000ab020000  #      cbl $7, %r8, .L22
00000242 : 932653                #      leaq (%rdi, %rsi, 8), %rcx
00000245 : 646001000000          #      movq $1, %edi
0000024b : 4F0095020000          #      jmp .L23
00000251 :                       #  .L27:
00000251 : 93F263                #      leaq (%rcx, %rdi, 8), %r15
00000254 : 315F                  #      movq (%r15), %rsi
00000256 : A506ffffffff          #      leaq -1(%rdi), %rax
0000025c : 4F0071020000          #      jmp .L24
00000262 :                       #  .L26:
00000262 : B7F20308000000        #      leaq 8(%rcx, %rax, 8), %r15
00000269 : 393F                  #      movq %rdx, (%r15)
0000026b : 510001000000          #      subq $1, %rax
00000271 :                       #  .L24:
00000271 : F6000000000086020000  #      cbg $0, %rax, .L25
0000027b : 93F203                #      leaq (%rcx, %rax, 8), %r15
0000027e : 313F                  #      movq (%r15), %rdx
00000280 : 465362020000          #      cbg %rdx, %rsi, .L26
00000286 :                       #  .L25:
00000286 : B7F20308000000        #      leaq 8(%rcx, %rax, 8), %r15
0000028d : 395F                  #      movq %rsi, (%r15)
0000028f : 506001000000          #      addq $1, %rdi
00000295 :                       #  .L23:
00000295 : 458651020000          #      cble %rdi, %r8, .L27
0000029b : 31F7                  #      movq (%rsp), %r15
0000029d : 75B708000000          #      movq 8(%rsp), %r11
000002a3 : 507010000000          #      addq $16, %rsp
000002a9 : 000B                  #      ret %r11
000002ab :                       #  .L22:
000002ab : 517018000000          #      subq $24, %rsp
000002b1 : 7DC710000000          #      movq %r12, 16(%rsp)
000002b7 : 7D4708000000          #      movq %rbp, 8(%rsp)
000002bd : 3917                  #      movq %rbx, (%rsp)
000002bf : 930530                #      leaq (%rsi, %rdx, 1), %rax
000002c2 : 560001000000          #      sarq $1, %rax
000002c8 : 93F603                #      leaq (%rdi, %rax, 8), %r15
000002cb : 319F                  #      movq (%r15), %r9
000002cd : A5A5ffffffff          #      leaq -1(%rsi), %r10
000002d3 : A51301000000          #      leaq 1(%rdx), %rbx
000002d9 :                       #  .L28:
000002d9 : 50A001000000          #      addq $1, %r10
000002df : 9346A3                #      leaq (%rdi, %r10, 8), %rbp
000002e2 : 75B400000000          #      movq 0(%rbp), %r11
000002e8 : 449Bd9020000          #      cbl %r11, %r9, .L28
000002ee : 4F00f6020000          #      jmp .L30
000002f4 :                       #  .L32:
000002f4 : 2110                  #      movq %rax, %rbx
000002f6 :                       #  .L30:
000002f6 : A501ffffffff          #      leaq -1(%rbx), %rax
000002fc : 932603                #      leaq (%rdi, %rax, 8), %rcx
000002ff : 3182                  #      movq (%rcx), %r8
00000301 : 4698f4020000          #      cbg %r8, %r9, .L32
00000307 : 45A01d030000          #      cble %rax, %r10, .L31
0000030d : 7D8400000000          #      movq %r8, 0(%rbp)
00000313 : 39B2                  #      movq %r11, (%rcx)
00000315 : 2110                  #      movq %rax, %rbx
00000317 : 4F00d9020000          #      jmp .L28
0000031d :                       #  .L31:
0000031d : 21C3                  #      movq %rdx, %r12
0000031f : 2146                  #      movq %rdi, %rbp
00000321 : 2130                  #      movq %rax, %rdx
00000323 : 4EB020020000          #      call quick_sort, %r11
00000329 : 213C                  #      movq %r12, %rdx
0000032b : 2151                  #      movq %rbx, %rsi
0000032d : 2164                  #      movq %rbp, %rdi
0000032f : 4EB020020000          #      call quick_sort, %r11
00000335 : 3117                  #      movq (%rsp), %rbx
00000337 : 754708000000          #      movq 8(%rsp), %rbp
0000033d : 75C710000000          #      movq 16(%rsp), %r12
00000343 : 507018000000          #      addq $24, %rsp
00000349 :                       #  .L35:
00000349 : 31F7                  #      movq (%rsp), %r15
0000034b : 75B708000000          #      movq 8(%rsp), %r11
00000351 : 507010000000          #      addq $16, %rsp
00000357 : 000B                  #      ret %r11
00000359 :                       #  run:
00000359 :                       #  .LFB12:
00000359 : 517020000000          #      subq $32, %rsp
0000035f : 7DB718000000          #      movq %r11, 24(%rsp)
00000365 : 7DC710000000          #      movq %r12, 16(%rsp)
0000036b : 7D4708000000          #      movq %rbp, 8(%rsp)
00000371 : 3917                  #      movq %rbx, (%rsp)
00000373 : 640000000000          #      movq $0, %eax
00000379 : 4EB0dd000000          #      call init_allocator, %r11
0000037f : 640000000000          #      movq $0, %eax
00000385 : 4EB000000000          #      call read_long, %r11
0000038b : 21C0                  #      movq %rax, %r12
0000038d : 52C001000000          #      andq $1, %r12d
00000393 : 520002000000          #      andq $2, %eax
00000399 : 2110                  #      movq %rax, %rbx
0000039b : 640000000000          #      movq $0, %eax
000003a1 : 4EB000000000          #      call read_long, %r11
000003a7 : 2140                  #      movq %rax, %rbp
000003a9 : 2160                  #      movq %rax, %rdi
000003ab : 4EB022010000          #      call get_random_array, %r11
000003b1 : F01000000000cb030000  #      cbe $0, %rbx, .L37
000003bb : 2164                  #      movq %rbp, %rdi
000003bd : 4EB0a1010000          #      call read_array, %r11
000003c3 : 2110                  #      movq %rax, %rbx
000003c5 : 4F00d5030000          #      jmp .L38
000003cb :                       #  .L37:
000003cb : 2164                  #      movq %rbp, %rdi
000003cd : 4EB022010000          #      call get_random_array, %r11
000003d3 : 2110                  #      movq %rax, %rbx
000003d5 :                       #  .L38:
000003d5 : A534ffffffff          #      leaq -1(%rbp), %rdx
000003db : 645000000000          #      movq $0, %esi
000003e1 : 2161                  #      movq %rbx, %rdi
000003e3 : 4EB020020000          #      call quick_sort, %r11
000003e9 : F0C000000000fd030000  #      cbe $0, %r12, .L39
000003f3 : 2151                  #      movq %rbx, %rsi
000003f5 : 2164                  #      movq %rbp, %rdi
000003f7 : 4EB080000000          #      call print_array, %r11
000003fd :                       #  .L39:
000003fd : 2101                  #      movq %rbx, %rax
000003ff : 3117                  #      movq (%rsp), %rbx
00000401 : 754708000000          #      movq 8(%rsp), %rbp
00000407 : 75C710000000          #      movq 16(%rsp), %r12
0000040d : 75B718000000          #      movq 24(%rsp), %r11
00000413 : 507020000000          #      addq $32, %rsp
00000419 : 000B                  #      ret %r11
0000041b :                       #  .LFE0:
0000041b :                       #  .LFE1:
0000041b :                       #  .LFE2:
0000041b :                       #  .LFE3:
0000041b :                       #  .LFE4:
0000041b :                       #  .LFE7:
0000041b :                       #  .LFE8:
0000041b :                       #  .LFE9:
0000041b :                       #  .LFE5:
0000041b :                       #  .LFE6:
0000041b :                       #  .LFE11:
0000041b :                       #  .LFE12:
00000420 : 0000000000000000      #      .comm cur_allocator,8,8
